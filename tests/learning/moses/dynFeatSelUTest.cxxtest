/** dynFeatSelTest.cxxtest ---
 *
 * Copyright (C) 2012 OpenCog Foundation
 * Copyright (C) 2013 Linas Vepstas
 *
 * Author: Linas Vepstas <linasveptas@gmail.com>
 *
 * This program is free software; you can redistribute it and/or modify
 * it under the terms of the GNU Affero General Public License v3 as
 * published by the Free Software Foundation and including the exceptions
 * at http://opencog.org/wiki/Licenses
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU General Public License for more details.
 *
 * You should have received a copy of the GNU Affero General Public License
 * along with this program; if not, write to:
 * Free Software Foundation, Inc.,
 * 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301 USA.
 */

#include <cxxtest/TestSuite.h>
#include "moses-framework.h"

using namespace opencog::moses;

const string test_dir = string(PROJECT_SOURCE_DIR) + "/tests/learning/moses/";

/**
 * Test operation of the dynamic feature selector.
 */
class dynamicFeatsUTest : public CxxTest::TestSuite
{
public:
    dynamicFeatsUTest()
    {
        // logger().setPrintToStdoutFlag(true);
        // to control the log level use option -l
    }

    // single-threaded test.
    // Expected score results:
    // -m48000 -r0 get score of -35 run-time  54 secs
    // -m48000 -r1 get score of -42 run-time  54 secs
    // -m48000 -r2 get score of -42 run-time  54 secs
    // -m48000 -r3 get score of -13 run-time 135 secs
    // -m48000 -r4 get score of -36 run-time  63 secs
    // -m48000 -r5 get score of -42 run-time  52 secs

    // -m24000 -r3 get score of -21 run-time  27 secs

    // -m24000 -r2 get score of -36 run-time  22 secs
    // -m12000 -r2 get score of -42 run-time   8 secs
  
    // XXX Except that the actual score will change as algorithm
    // changes are made, because algo changes change the random number
    // seq which changes the final results.  So ... err ... not sure
    // what to do about this ... 
    void test_dyn_feat_score()
    {
        string data_file_path("-i" + test_dir + "feat-sel.csv");
        moses_test_score({"-Hit", 
              "-uchange_predict",
              "-B0",     // knob-building effort of zero -- no effort at all.
              "-m24000", 
              "-Z1",     // enable cross-over
              "-j1",
              "--hc-max-nn-evals=5000",
              "--enable-fs=1",   // use run-time dynamic feat sel.
              "--fs-target-size=12",   // pick 12 dynamical out of 300
              "-r3",
              data_file_path,
              },
              -21);
    }

    // AIEEEE, this test is currently broken, I am getting non-deterministic test results!
    // -m12000 -r0 get score of -31 run-time  8 secs
    // -m24000 -r0 get score of -21 run-time 19 secs
    // -m48000 -r0 get score of -20 run-time 58 secs
    // -m48000 -r1 get score of -36 run-time 43 secs
    // -m48000 -r2 get score of -12 run-time 54 secs
    void test_dyn_feat_score_threaded()
    {
#if 0
        string data_file_path("-i" + test_dir + "feat-sel.csv");
        moses_test_score({"-Hit", 
              "-uchange_predict",
              "-B0",     // knob-building effort of zero -- no effort at all.
              "-m48000", 
              "-Z1",     // enable cross-over
              "-j4",
              "--hc-max-nn-evals=5000",
              "--enable-fs=1",   // use run-time dynamic feat sel.
              "--fs-target-size=12",   // pick 12 dynamical out of 300
              "-r2",
              data_file_path,
              },
              -12);
#endif
    }
};
