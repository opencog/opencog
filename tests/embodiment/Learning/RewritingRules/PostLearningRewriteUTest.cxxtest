/*
 * tests/embodiment/Learning/RewritingRules/PostLearningRewriteUTest.cxxtest
 *
 * Copyright (C) 2002-2009 Novamente LLC
 * All Rights Reserved
 * Author(s): Novamente team
 *
 * This program is free software; you can redistribute it and/or modify
 * it under the terms of the GNU Affero General Public License v3 as
 * published by the Free Software Foundation and including the exceptions
 * at http://opencog.org/wiki/Licenses
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU General Public License for more details.
 *
 * You should have received a copy of the GNU Affero General Public License
 * along with this program; if not, write to:
 * Free Software Foundation, Inc.,
 * 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301 USA.
 */
#include "comboreduct/combo/vertex.h"
#include "comboreduct/reduct/reduct.h"
#include "util/tree.h"

using namespace reduct;
using namespace combo;
using namespace opencog;
using namespace std;

class PostLearningReductUTest : public CxxTest::TestSuite
{
public:
    void test_post_learning_drop_before_grab() {
        string tree_str = "and_seq(action_boolean_if(true and_seq(beg grab(stick) or_seq(grab(stick)))))";

        stringstream ss(tree_str);
        combo_tree tr;
        ss >> tr;

        post_learning_rewrite(tr);

        stringstream ssr;
        ssr << tr;

        string tree_res_str = "and_seq(action_boolean_if(true and_seq(beg drop grab(stick) or_seq(drop grab(stick))))) "; //WARNING : the last space is important

        std::cout << "Obtained result : " << ssr.str() << std::endl;
        std::cout << "Expected result : " << tree_res_str << std::endl;

        TS_ASSERT_EQUALS(ssr.str(), tree_res_str);

    }
};
