/*
 * tests/embodiment/Control/PerceptionActionInterface/ActionTypeUTest.cxxtest
 *
 * Copyright (C) 2002-2009 Novamente LLC
 * All Rights Reserved
 * Author(s): Welter
 *
 * This program is free software; you can redistribute it and/or modify
 * it under the terms of the GNU Affero General Public License v3 as
 * published by the Free Software Foundation and including the exceptions
 * at http://opencog.org/wiki/Licenses
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU General Public License for more details.
 *
 * You should have received a copy of the GNU Affero General Public License
 * along with this program; if not, write to:
 * Free Software Foundation, Inc.,
 * 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301 USA.
 */

#include <opencog/embodiment/Control/PerceptionActionInterface/ActionType.h>

using namespace opencog::pai;

class ActionTypeUTest :  public CxxTest::TestSuite
{
public:
    ActionTypeUTest() {
    }

    ~ActionTypeUTest() {
    }

    void setUp() {
    }

    void tearDown() {
    }

    void testActionType() {
        //cout << "testActionType" << endl;
        int typeCode = EAT_CODE;
        for (; typeCode < NUMBER_OF_ACTION_TYPES; typeCode++) {
            const ActionType& actionType = ActionType::getFromCode((ActionTypeCode)typeCode);
            const std::string& pName = actionType.getName();
            TS_ASSERT(strlen(pName.c_str()) > 0);
            const ActionType& actionTypeByName = ActionType::getFromName(pName);
            TS_ASSERT(&actionType == &actionTypeByName);
            int otherTypeCode = EAT_CODE;
            for (; otherTypeCode < NUMBER_OF_ACTION_TYPES; otherTypeCode++) {
                const ActionType& otherActionType = ActionType::getFromCode((ActionTypeCode) otherTypeCode);
                if (typeCode != otherTypeCode) {
                    TS_ASSERT(&actionType != &otherActionType);
                } else {
                    TS_ASSERT(&actionType == &otherActionType);
                }
            }
        }
    }

    void testPrintHelp() {
        ActionType::printHelp();
    }


};
