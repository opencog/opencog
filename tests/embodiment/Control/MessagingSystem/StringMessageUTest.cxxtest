/*
 * tests/embodiment/Control/MessagingSystem/StringMessageUTest.cxxtest
 *
 * Copyright (C) 2002-2009 Novamente LLC
 * All Rights Reserved
 * Author(s): Andre Senna
 *
 * This program is free software; you can redistribute it and/or modify
 * it under the terms of the GNU Affero General Public License v3 as
 * published by the Free Software Foundation and including the exceptions
 * at http://opencog.org/wiki/Licenses
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU General Public License for more details.
 *
 * You should have received a copy of the GNU Affero General Public License
 * along with this program; if not, write to:
 * Free Software Foundation, Inc.,
 * 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301 USA.
 */


#include <opencog/embodiment/Control/MessagingSystem/StringMessage.h>
#include <string>
#include <string.h>

using namespace opencog::messaging;

class StringMessageUTest : public CxxTest::TestSuite
{

private:

public:

    StringMessageUTest() {
    }

    void testLoadPlainTextRepresentation() {

        std::string from("PROXY");
        std::string to("SPAWNER");

        char *msg = strdup("msg1");
        std::string stmsg("msg2");

        StringMessage *obj1 = new StringMessage(from, to, msg);
        StringMessage *obj2 = new StringMessage(from, to, stmsg);

        StringMessage *obj3 = new StringMessage(from, to);
        StringMessage *obj4 = new StringMessage(from, to);

        obj3->loadPlainTextRepresentation(obj1->getPlainTextRepresentation());
        obj4->loadPlainTextRepresentation(obj2->getPlainTextRepresentation());

        TS_ASSERT(! strcmp(obj1->getPlainTextRepresentation(), obj3->getPlainTextRepresentation()));
        TS_ASSERT(! strcmp(obj2->getPlainTextRepresentation(), obj4->getPlainTextRepresentation()));

    }

    void setUp() {
    }

    void tearDown() {
    }

}; // class
