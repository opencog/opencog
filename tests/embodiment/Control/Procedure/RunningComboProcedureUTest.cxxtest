/*
 * tests/embodiment/Control/Procedure/RunningComboProcedureUTest.cxxtest
 *
 * Copyright (C) 2002-2009 Novamente LLC
 * All Rights Reserved
 * Author(s): Novamente team
 *
 * This program is free software; you can redistribute it and/or modify
 * it under the terms of the GNU Affero General Public License v3 as
 * published by the Free Software Foundation and including the exceptions
 * at http://opencog.org/wiki/Licenses
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU General Public License for more details.
 *
 * You should have received a copy of the GNU Affero General Public License
 * along with this program; if not, write to:
 * Free Software Foundation, Inc.,
 * 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301 USA.
 */
#include <opencog/embodiment/Control/Procedure/RunningComboProcedure.h>
#include <opencog/embodiment/AvatarComboVocabulary/AvatarComboVocabulary.h>
#include <opencog/embodiment/Control/PerceptionActionInterface/ActionPlanSender.h>
#include <iostream>

using namespace Procedure;
using namespace std;

bool chatty = true;

class ChattyActionPlanSender : public opencog::pai::ActionPlanSender
{
    bool sendActionPlan(const opencog::pai::ActionPlan& actionPlan) {
        for (unsigned int i = 0;i < actionPlan.size();++i)
            cout << "[" << actionPlan.getAction(i).getName() << " "
                 << actionPlan.getAction(i).getType() << "]" << endl;
        return true;
    }
};

class RunningComboProcedureUTest :  public CxxTest::TestSuite
{
public:
    void test1() {
    }

};
