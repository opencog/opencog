/*
 * tests/embodiment/Control/Procedure/existsComboInterpreterUTest.cxxtest
 *
 * Copyright (C) 2002-2009 Novamente LLC
 * All Rights Reserved
 * Author(s): Elvys Borges
 *
 * This program is free software; you can redistribute it and/or modify
 * it under the terms of the GNU Affero General Public License v3 as
 * published by the Free Software Foundation and including the exceptions
 * at http://opencog.org/wiki/Licenses
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU General Public License for more details.
 *
 * You should have received a copy of the GNU Affero General Public License
 * along with this program; if not, write to:
 * Free Software Foundation, Inc.,
 * 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301 USA.
 */


#include "ComboInterpreterUTest.h"
#include <opencog/util/mt19937ar.h>
#include <opencog/embodiment/AvatarComboVocabulary/AvatarComboVocabulary.h>

using namespace opencog::pai;
using namespace AvatarCombo;
using namespace std;

class existsComboInterpreterUTest :  public CxxTest::TestSuite , ComboInterpreterUTest
{

private:
    opencog::RandGen* rng;

public :

    existsComboInterpreterUTest() {
        rng = new opencog::MT19937RandGen(0);
    }

    ~existsComboInterpreterUTest() {
        delete rng;
    }

    opencog::RandGen& getRandGen() {
        return *rng;
    }

    void testExistsEdible() {
        string str("exists_edible");
        runProcedureInCombo(str, id::logical_true);
    }

    void testExistsMovable() {
        string str("exists_movable");
        runProcedureInCombo(str, id::logical_true);
    }

    void testExistsPickupable() {
        string str("exists_pickupable");
        runProcedureInCombo(str, id::logical_true);
    }

    void testExistsDrinkable() {
        string str("exists_drinkable");
        runProcedureInCombo(str, id::logical_true);
    }

    void testExistsAvatar() {
        string str("exists_avatar");
        runProcedureInCombo(str, id::logical_true);
    }

    void testExistsPet() {
        string str("exists_pet");
        runProcedureInCombo(str, id::logical_true);
    }

    void testExistsSmall() {
        string str("exists_small");
        runProcedureInCombo(str, id::logical_true);
    }

    void testExistsMoving() {
        string str("exists_moving");
        runProcedureInCombo(str, id::logical_true);
    }

    void testExistsPooPlace() {
        string str("exists_poo_place");
        runProcedureInCombo(str, id::logical_true);
    }

    void testExistsPeePlace() {
        string str("exists_pee_place");
        runProcedureInCombo(str, id::logical_true);
    }

    void testExistsNoise() {
        string str("exists_noisy");
        runProcedureInCombo(str, id::logical_true);
    }


};


