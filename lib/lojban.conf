#
# This file provides an example configuration for a production OpenCog
# server. Particularly noteworthy is the list of automatically loaded
# modules.
#
SERVER_PORT           = 17001
LOG_FILE              = /tmp/cogserver.log

# Other possible log levels are "error", "warn", "info", "debug" and "fine"
# LOG_LEVEL             = debug
LOG_LEVEL             = info
LOG_TO_STDOUT         = false
SERVER_CYCLE_DURATION = 100

# Economic Attention Allocation parameters
STARTING_STI_FUNDS    = 10000
STARTING_LTI_FUNDS    = 10000
STI_FUNDS_BUFFER      = 10000
LTI_FUNDS_BUFFER      = 10000
MIN_STI               = -400

ECAN_MAX_ATOM_STI_RENT      = 15
ECAN_STARTING_ATOM_STI_RENT = 10
ECAN_STARTING_ATOM_LTI_RENT = 0
ECAN_STARTING_ATOM_STI_WAGE = 2
ECAN_STARTING_ATOM_LTI_WAGE = 2

#Used by ImportanceDiffusionAgent class
#0 => flat rent, 1 => exp rent, 2 => log rent, 3 => linear rent
ECAN_RENT_TYPE              = 0
ECAN_RENT_AMNESTY           = 5
ECAN_RENT_EQUATION_PARAMETER_0 = 0.05
ECAN_RENT_EQUATION_PARAMETER_1 = 0.0

#End of ImportanceDiffusionAgent class

#Used by SimpleImportanceDiffusionAgent class
#Maximum percentage of STI that is spread from an atom
ECAN_MAX_SPREAD_PERCENTAGE = 0.6

# If false, will diffuse along hebbian links only. If true,
# will also diffuse to all non-hebbian incident atoms in the
# incoming and outgoing sets
ECAN_SPREAD_HEBBIAN_ONLY = false

# Maximum percentage that will be available for diffusion to hebbian links
HEBBIAN_MAX_ALLOCATION_PERCENTAGE = 0.5
ECAN_CONVERT_LINKS = false
ECAN_CONVERSION_THRESHOLD = 15

# spread deciding function type (HPERBOLIC = 0 and STEP = 1 )
SPREAD_DECIDER_TYPE = 1
#END of SimpleImportanceDiffusionAgent params

#ForgettingAgent params
ECAN_FORGET_PERCENTAGE = 0.001

#END of Economic Attention Allocation parameters

# Use this command PROMPT when telnet/terminal doesn't support ANSI
PROMPT                = "opencog> "
# Prompt with ANSI color codes
ANSI_PROMPT           = "[0;32mopencog[1;32m> [0m"
# Use this guile PROMPT when telnet/terminal doesn't support ANSI
SCM_PROMPT            = "guile> "
# Prompt with ANSI color codes
ANSI_SCM_PROMPT       = "[0;34mguile[1;34m> [0m"
# Global option so that modules know whether they should output ANSI color
# codes
ANSI_ENABLED	       = true

# Cogserver in OSX will automatically change .so extension to .dylib
# if .so exists.
MODULES               = opencog/cogserver/server/libbuiltinreqs.so,
                        opencog/cogserver/shell/libscheme-shell.so,
                        opencog/cogserver/shell/libpy-shell.so,
                        opencog/nlp/lojban/libLojbanModule.so

# Optional modules, not enabled by default
#                        opencog/modules/events/libatomspacepublishermodule.so
#                        opencog/learning/dimensionalembedding/libdimensionalembedding.so

# Parameters for ZeroMQ AtomSpace Event Publisher
ZMQ_EVENT_USE_PUBLIC_IP = TRUE
ZMQ_EVENT_PORT = 5563
