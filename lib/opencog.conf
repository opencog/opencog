#
# This file provides an example configuration for a production OpenCog
# server. Particularly noteworthy is the list of automatically loaded
# modules.
#
SERVER_PORT           = 17001
LOG_FILE              = /tmp/cogserver.log

# Other possible log levels are "error", "warn", "info", "debug" and "fine"
# LOG_LEVEL             = debug
LOG_LEVEL             = info
LOG_TO_STDOUT         = false
SERVER_CYCLE_DURATION = 100
IDLE_CYCLES_PER_TICK  = 3

# Economic Attention Allocation parameters
STARTING_STI_FUNDS    = 10000
STARTING_LTI_FUNDS    = 10000
STI_FUNDS_BUFFER      = 10000
LTI_FUNDS_BUFFER      = 10000
MIN_STI               = -400

# Use the commented PROMPT instead if telnet/terminal doesn't support ANSI
PROMPT                = "opencog> "
# Prompt with ANSI color codes
ANSI_PROMPT                = "[0;32mopencog[1;32m> [0m"
# Global option so that modules know whether they should output ANSI color
# codes
ANSI_ENABLED	      = true

# Cogserver in OSX will automatically change .so extension to .dylib
# if .so exists.
MODULES               = opencog/server/libbuiltinreqs.so,
                        opencog/persist/sql/libpersist.so,
                        opencog/query/libquery.so,
                        opencog/shell/libscheme-shell.so,
                        opencog/shell/libpy-shell.so,
                        opencog/nlp/types/libnlp-types.so,
                        opencog/viterbi/libviterbi.so,
                        opencog/dynamics/attention/libattention.so,
                        opencog/web/libocweb.so,
                        opencog/ubigraph/libubigraph.so,
                        opencog/learning/dimensionalembedding/libdimensionalembedding.so,
                        opencog/cython/libPythonModule.so,
                        opencog/embodiment/AtomSpaceExtensions/libAtomSpaceExtensions.so

SCM_PRELOAD           = atomspace/core_types.scm,
                        spacetime/spacetime_types.scm,
                        nlp/types/nlp_types.scm,
                        dynamics/attention/attention_types.scm,
                        embodiment/AtomSpaceExtensions/embodiment_types.scm,
                        viterbi/viterbi_types.scm,
                        scm/persistence.scm,
                        scm/utilities.scm,
                        scm/apply.scm,
                        scm/file-utils.scm, 
                        scm/debug.scm,
                        nlp/scm/type-definitions.scm, 
                        nlp/scm/config.scm, 
                        nlp/scm/file-utils.scm,
                        nlp/scm/nlp-utils.scm,
                        nlp/scm/disjunct-list.scm,
                        nlp/scm/processing-utils.scm,
                        reasoning/pln/scm/pln-rules.scm

# Uncomment if Python extensions are not stored in these locations,
# or the binary and source directories:
#     /usr/local/share/opencog/python
#     /usr/share/opencog/python
#     
# Use a comma separated list for multiple dirs
#PYTHON_EXTENSION_DIRS  = 

# Run these python modules on start up
PYTHON_PRELOAD = pyshell

# IMPORTANT!
# Database login credentials. Change these to reflect your actual setup!
#
# The sense-similarity tables hold precomputed values for the similarity
# of word WordNet-3.0 senses. These tables are referenced in 
# nlp/wsd/SenseSimilaritySQL.cc  These will *eventually* be replaced by
# a persistent opencog table of sense similarities. For now, they remain
# in use.
#
SENSE_SIMILARITY_DB_NAME          = "lexat"
SENSE_SIMILARITY_DB_USERNAME      = "linas"
SENSE_SIMILARITY_DB_PASSWD        = "asdf"
#

# PLN settings
PLN_RECORD_TRAILS        = true
# PLN_LOG_LEVEL            = 2
PLN_LOG_LEVEL            = -5
PLN_FW_VARS_IN_ATOMSPACE = true
# If this is false, it only prints their (p)Handles
PLN_PRINT_REAL_ATOMS     = true
PLN_FITNESS_EVALUATOR    = "best"

