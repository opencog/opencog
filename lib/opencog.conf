#
# This file provides an example configuration for a production OpenCog
# server. Particularly noteworthy is the list of automatically loaded
# modules.
#
SERVER_PORT           = 17001
LOG_FILE              = /tmp/cogserver.log

# Other possible log levels are "error", "warn", "info", "debug" and "fine"
# LOG_LEVEL             = debug
LOG_LEVEL             = info
LOG_TO_STDOUT         = false
SERVER_CYCLE_DURATION = 100
IDLE_CYCLES_PER_TICK  = 3

# Economic Attention Allocation parameters
STARTING_STI_FUNDS    = 10000
STARTING_LTI_FUNDS    = 10000
STI_FUNDS_BUFFER      = 10000
LTI_FUNDS_BUFFER      = 10000
MIN_STI               = -400

# Use this command PROMPT when telnet/terminal doesn't support ANSI
PROMPT                = "opencog> "
# Prompt with ANSI color codes
ANSI_PROMPT           = "[0;32mopencog[1;32m> [0m"
# Use this guile PROMPT when telnet/terminal doesn't support ANSI
SCM_PROMPT            = "guile> "
# Prompt with ANSI color codes
ANSI_SCM_PROMPT       = "[0;34mguile[1;34m> [0m"
# Global option so that modules know whether they should output ANSI color
# codes
ANSI_ENABLED	       = true

# Cogserver in OSX will automatically change .so extension to .dylib
# if .so exists.
MODULES               = opencog/server/libbuiltinreqs.so,
                        opencog/persist/sql/libPersistModule.so,
                        opencog/query/libQueryModule.so,
                        opencog/shell/libscheme-shell.so,
                        opencog/shell/libpy-shell.so,
                        opencog/nlp/types/libnlp-types.so,
                        opencog/nlp/lg-dict/libLGDictModule.so,
                        opencog/nlp/sureal/libSuRealModule.so,
                        opencog/learning/pln/libPLNTypes.so,
                        opencog/dynamics/attention/libattention-types.so,
                        opencog/dynamics/attention/libattention.so,
                        opencog/embodiment/AtomSpaceExtensions/libembodiment-types.so,
                        opencog/embodiment/AtomSpaceExtensions/libAtomSpaceExtensions.so,
                        opencog/cython/libPythonModule.so,
                        opencog/reasoning/RuleEngine/rule-engine-src/libRuleEngineModule.so

# Optional modules, not enabled by default
#                        opencog/benchmark/module/libbenchmark.so,
#                        opencog/persist/zmq/events/libatomspacepublishermodule.so
#                        opencog/dynamics/attention/libhebbiancreation.so
#                        opencog/learning/dimensionalembedding/libdimensionalembedding.so
#                        opencog/visualization/ubigraph/libubigraph.so
#                        opencog/viterbi/libviterbi.so

# Load order of the SCM modules:
# First, the user-defined config file.
# Next, all the atom type definition files.
# Next, the system-wide utilities.
# Finally, any code specific to various subsystems.
# All this mostly in alphabetical order; however, it would be best
# to have a load order where things got defined before they got used.
SCM_PRELOAD           = scm/config.scm,
                        atomspace/core_types.scm,
                        spacetime/spacetime_types.scm,
                        nlp/types/nlp_types.scm,
                        dynamics/attention/attention_types.scm,
                        embodiment/AtomSpaceExtensions/embodiment_types.scm,
                        learning/pln/pln_types.scm,
                        scm/core-docs.scm,
                        scm/utilities.scm,
                        scm/apply.scm,
                        scm/file-utils.scm, 
                        scm/persistence.scm,
                        scm/repl-shell.scm,
                        scm/av-tv.scm,
                        nlp/scm/type-definitions.scm, 
                        nlp/scm/config.scm, 
                        nlp/scm/file-utils.scm,
                        nlp/scm/nlp-utils.scm,
                        nlp/scm/disjunct-list.scm,
                        nlp/scm/processing-utils.scm,
                        nlp/relex2logic/utilities.scm,
                        nlp/relex2logic/rule-helpers.scm,
                        nlp/relex2logic/post-processing.scm,
                        nlp/lg-dict/utilities.scm,
                        nlp/sureal/surface-realization.scm
#                        viterbi/viterbi_types.scm

# Uncomment if Python extensions are not stored in these locations,
# or the binary and source directories:
#     /usr/local/share/opencog/python
#     /usr/share/opencog/python
#     
# Use a comma separated list for multiple dirs
PYTHON_EXTENSION_DIRS  = ../opencog/python/web/api,
                         ../opencog/python/pln,
                         ../tests/python/test_pln

# NOTE: If you want Python functions to be loaded at startup for acccess by
# Python code that runs via EvaluationLink or GroundedSchemaNode, then place
# them in the PYTHON_PRELOAD_FUNCTIONS directory. PYTHON_PRELOAD is only for
# MindAgent and Request Python handlers.
PYTHON_PRELOAD_FUNCTIONS = ../opencog/python/preload_functions

# Run these python cogserver modules on start up
PYTHON_PRELOAD = pyshell, restapi, agent_finder

# IMPORTANT!
# Database login credentials. Change these to reflect your actual setup!
# For information on how to set up atomspace persistance, see the README
# file in opencog/persist/sql/README.
#
STORAGE               = "OpenCogTut"
STORAGE_USERNAME      = "rohits134"
STORAGE_PASSWD        = "rohits134"
#
# The sense-similarity tables hold precomputed values for the similarity
# of word WordNet-3.0 senses. These tables are referenced in 
# nlp/wsd/SenseSimilaritySQL.cc  These will *eventually* be replaced by
# a persistent opencog table of sense similarities. For now, they remain
# in use.
#
SENSE_SIMILARITY_DB_NAME          = "lexat"
SENSE_SIMILARITY_DB_USERNAME      = "linas"
SENSE_SIMILARITY_DB_PASSWD        = "asdf"

# Parameters for ZeroMQ AtomSpace Event Publisher
ZMQ_EVENT_USE_PUBLIC_IP = TRUE
ZMQ_EVENT_PORT = 5563


