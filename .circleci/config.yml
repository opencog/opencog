version: 2.0

jobs:
  opencog:
    docker:
      - image: opencog/opencog-deps
        user: root
        environment:
          CCACHE_DIR: /ws/ccache
      - image: opencog/relex
        name: relex
        command: /bin/sh -c "./opencog-server.sh"
    working_directory: /ws/opencog
    steps:
      - attach_workspace:
          at: /ws
      - run:
          name: Start restoring ccache
          command: date +%d-%m-%Y > /tmp/date
      - restore_cache:
          keys:
            - ccache-{{ checksum "/tmp/date" }}
            - ccache-
      - run:
          name: Install CogUtil
          command: |
            git clone --depth 1 https://github.com/$CIRCLE_PROJECT_USERNAME/cogutil /ws/cogutil
            mkdir -p /ws/cogutil/build
            cd /ws/cogutil/build && cmake .. && make -j2 && make -j2 install
            ldconfig
      - run:
          name: Checkout AtomSpace
          command: git clone --depth 1 https://github.com/$CIRCLE_PROJECT_USERNAME/atomspace /ws/atomspace
      - restore_cache:
          name: Restore GHC Cache
          keys:
            - ghc-{{checksum "/ws/atomspace/opencog/haskell/stack.yaml"}}-{{ arch }}
      - restore_cache:
          name: Restore Haskell Deps Cache
          keys:
            - haskelldeps-{{checksum "/ws/atomspace/opencog/haskell/stack.yaml"}}-{{checksum "/ws/atomspace/opencog/haskell/opencog-atomspace.cabal"}}-{{ arch }}
      - run:
          name: Install AtomSpace
          command: |
            mkdir -p /ws/atomspace/build
            cd /ws/atomspace/build && cmake .. && make -j2 && make -j2 install
            ldconfig
      - save_cache:
          name: Save GHC Cache
          key: ghc-{{checksum "/ws/atomspace/opencog/haskell/stack.yaml"}}-{{ arch }}
          paths:
            - /root/.stack
      - save_cache:
          name: Save Haskell Deps Cache
          key: haskelldeps-{{checksum "/ws/atomspace/opencog/haskell/stack.yaml"}}-{{checksum "/ws/atomspace/opencog/haskell/opencog-atomspace.cabal"}}-{{ arch }}
          paths:
            - /ws/atomspace/opencog/haskell/.stack-work
      - run:
          name: Checkout URE
          command: |
            git clone --depth 1 https://github.com/$CIRCLE_PROJECT_USERNAME/ure /ws/ure
            mkdir -p /ws/ure/build
            cd /ws/ure/build && cmake .. && make -j2 && make -j2 install
            ldconfig
      - run:
          name: Checkout CogServer
          command: |
            git clone --depth 1 https://github.com/$CIRCLE_PROJECT_USERNAME/cogserver /ws/cogserver
            mkdir -p /ws/cogserver/build
            cd /ws/cogserver/build && cmake .. && make -j2 && make -j2 install
            ldconfig
      - run:
          name: Checkout AttentionBank
          command: |
            git clone --depth 1 https://github.com/$CIRCLE_PROJECT_USERNAME/attention /ws/attention
            mkdir -p /ws/attention/build
            cd /ws/attention/build && cmake .. && make -j2 && make -j2 install
            ldconfig
      - run:
          name: Checkout PLN
          command: |
            git clone --depth 1 https://github.com/$CIRCLE_PROJECT_USERNAME/pln /ws/pln
            mkdir -p /ws/pln/build
            cd /ws/pln/build && cmake .. && make -j2 && make -j2 install
            ldconfig
      - checkout
      - run:
          name: CMake Configure
          command: mkdir build && cd build && cmake ..
      - run:
          name: Build
          command: cd build && make -j2
      - run:
          name: Build tests
          command: cd build && make -j2 tests
      - run:
          name: Run tests
          # command: cd build && make -j2 test ARGS=-j2
          command: cd build && make test
      - run:
          name: Print test log
          command: cat build/tests/Testing/Temporary/LastTest.log
          when: always
      - run:
          name: Install OpenCog
          command: cd build && make -j2 install && ldconfig
      - persist_to_workspace:
          root: /ws/
          paths:
            - opencog
            - ccache

  package: #Place holder
    docker:
      - image: opencog/opencog-deps
        user: root
    working_directory: /ws/opencog
    steps:
      - attach_workspace:
          at: /ws/
      - run:
          name: Start storing ccache
          command: date +%d-%m-%Y > /tmp/date
      - save_cache:
          key: ccache-{{ checksum "/tmp/date" }}
          paths:
            - /ws/ccache

workflows:
  version: 2
  build-test-package:
    jobs:
      - opencog
      - package:
          requires:
            - opencog
          filters:
            branches:
              only: master
