package opencog.learning.message;
// Specify the package name to generate correct namespace in cpp.
// In this example, a namespace like:
//      namespace opencog { namespace learning.message {} }
// will be generated.

// a blockCluster is an non-super blockEntity, which contains a list of blocks combining together with the same block type, 
// like all snow blocks, or all wood blocks 
message BlockCluster
{
    required int32 entityID = 1; 
    required string blockType = 2;    
    required int32  blockNumber = 3;
}

message BlockClusterLink
{
    required int32 entityID1 = 1;
    required int32 entityID2 = 2;
    required int32  adjacentBlockNumber1 = 3; 
    required int32  adjacentBlockNumber2 = 4;
}

message BlockClusterStream
{
    repeated BlockCluster blockClusters = 1;
}

message BlockClusterLinkStream
{
    repeated BlockClusterLink blockClusterLinks = 1;
}

message BlockClusterDataInput
{
    required string OAC_ID = 1;
    optional BlockClusterStream blockClusterStream = 2;
    optional BlockClusterLinkStream blockClusterLinkStream = 3;
}

message LearningNotifyInfo
{
    // OAC id
    required string OAC_ID = 1;

    enum NotifyType
    {
        // usually, after the first time sending all the RawDataFlow
        // send a notification of "begin compute all xxx" message
        COMPUTE_ALL_BLOCKCLUSTERS_INTERACTION_INFORMATION = 0;
    }

    required NotifyType notifyType = 2;
}

