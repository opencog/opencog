20150831 by YiShan
For now we're revising the old 3DSpaceMap. There are some points:
(1) Replace the old octree with Octomap

As Ben suggested, Octomap has sparse representation and support
probabilistic feature. Besides it's more stable than our own Octree. So
we will replace the old octree with Octomap Octree.

You can see the Octomap in

http://wiki.ros.org/octomap

in Ubuntu docker you can install it with

`sudo apt-get install ros-indigo-octomap

If you don't install the octomap, the compilation of SpaceMap will fail.

(2) Move the responsibility of querying block/entity info to the atomspace

Because in the future we will need to embody Opencog in different
environment(Minecraft/Unity world/real world/...). In different
embodiment we will need to save different infos in block/entity. It's
difficult to use old Block3D/Entity3D/BlockEntity in all embodiment at
the same time. So we decide to move the responsibility of querying
block/entity info to atomspace. We just save the handle of block/entity
in the 3DSpaceMap. The user will get the block handle by position and
use the handle to query info in atomspace.

(3) Add EntityRecorder to handle the location history of Entity

====

TODO:

(0) Replace logger().error() by
      throw opencog::NotFoundException(TRACE_INFO, ...)

(1) Spatial relation Calculation: See SpaceMapUtil

(2) Add more cython binding: The cython binding of inherited interface
of OctomapOcTree is not finished.

(3) Add more tests: since the use case of SpaceMap is complicated. It's
better to test it with more complicated use case.
